SqlMapConfig.xml_file=oracle/mybatis/SqlMapConfig.xml
menu.jsp_file=oracle/menu.jsp
DataModel.java_file=oracle/DataModel.java
classesProcessors_tblrepeat=<bean id="{className}ManagerProcessor" class="com.{contextpath}.api.processors.{className}ManagerProcessor" />
classesManagers_tblrepeat=<bean class="com.{contextpath}.api.handler.{className}Managment" />
classesRoutes_tblrepeat=<route id="{classNamelow}HandlerRoute"><from uri="vm:handle{className}EndPoint" /><process ref="{className}ManagerProcessor" /></route>
classestestRoutes_tblrepeat=<route id="{classNamelow}TestRequestHandlerRoute"><from uri="vm:handleTest{className}RequestEndPoint" /><process ref="TestManagerProcessor"/></route><route id="{classNamelow}TestResponseHandlerRoute"><from uri="vm:handleTest{className}ResponseEndPoint" /><process ref="TestManagerProcessor"/></route>

mapresource_tblrepeat=<mapper resource="{daoPath}/resources/{tblNamelow}.xml"/>
typealiases_tblrepeat=<typeAlias alias="{className}_type" type="{daoPkName}.model.{className}" />
menulinks_tblrepeat=<li><a href="/<%=com.{contextPath}.servlet.PagesFilter.contextPath%>/Pages/{dbName}/{classNamelow}.jsp" target="_self">{className}</a></li>
table.xml_repeat_file=oracle/mybatis/table.xml

selectByALL_repeat=<select id="{tblNamelow}_selectBy{propName}" resultMap="{tblNamelow}ResultMap"> select * from {userName}.{tblName} where {userName}.{tblName}.{colName} {equalorlike} #{value} </select>
deleteByALL_repeat=<delete id="{tblNamelow}_deleteBy{propName}" > delete  from {userName}.{tblName} where {userName}.{tblName}.{colName} {equalorlike} #{value} </delete>
columnMap_repeat=<result column="{colName}" property="{propName}"/>
#fkSelect_repeat={isFK}<select id="^tblNamelow$_selectBy^fkTable$ID" resultClass="^tblNamelow$ResultMap"> select * from ^tblName$ where ^tblName$.^propName$ = #{value} </select>{/isFK}
#fkDelete_repeat={isFK}<delete id="^tblNamelow$_deleteBy^fkTable$ID" > delete from ^tblName$ where ^tblName$.^propName$ = #{value} </delete>{/isFK}

isNullProps_repeat=<if test="{propName} != null"> {commaonnonsecond}#{{propName}}</if>
isNullColmns_repeat=<if test="{propName} != null"> {commaonnonsecond}{colName}</if>
isNullUpdate_repeat=<if test="{propName} != null"> ,{colName} = #{{propName}}</if>
pk_isNullProps_repeat={empty}
pk_isNullColmns_repeat={empty}
pk_isNullUpdate_repeat={empty} 

beans.xml_file=oracle/cxf/beans.xml
blueprint.xml_file=oracle/cxf/blueprint.xml
testblueprint.xml_file=oracle/cxf/test_blueprint.xml
TestManagment.java_file=oracle/cxf/TestManagment.java
TestManagerProcessor.java_file=oracle/cxf/TestManagerProcessor.java
processor.java_repeat_file=oracle/cxf/processor.java
manager.java_repeat_file=oracle/cxf/manager.java
RequestBean.java_repeat_file=oracle/cxf/RequestBean.java
ResponseBean.java_repeat_file=oracle/cxf/ResponseBean.java

#testrequestresponsehandlers_tblrepeat_file=oracle/cxf/testrequestresponsehandlers.txt
#testrequestresponseproces_tblrepeat_file=oracle/cxf/testrequestresponseprocess.txt
testrequestresponsehandlers_tblrepeat=			@POST			@Path("/{classNamelow}request")			@Produces("application/json")						public {className}RequestBean handleTest{className}Request() {				return new {className}RequestBean();			}						@POST			@Path("/{classNamelow}response") @Produces("application/json")			public {className}ResponseBean handleTest{className}Response() {return new {className}ResponseBean();}

testrequestresponseproces1_tblrepeat=						if(operationName.equals("handleTest{className}Request")){				{className}RequestBean {classNamelow}RequestBean = new {className}RequestBean();				output = {className}DAO.selectAll();				{classNamelow}RequestBean.getPagingModel().setPageSize(10);				{classNamelow}RequestBean.getPagingModel().setPageId(1);				{classNamelow}RequestBean.getSortingModel().setSortBy("id");				{classNamelow}RequestBean.getSortingModel().setSortBhv("asc");				{classNamelow}RequestBean.getFilterationModel().setEnableFilter(true);				{classNamelow}RequestBean.getFilterationModel().setFiter("11111");				{classNamelow}RequestBean.setRequestHeader(requestHeader);								if(output != null && !output.isEmpty()){					{classNamelow}RequestBean.set{className}(({className}) output.get(0));				}				exchange.getIn().setBody({classNamelow}RequestBean);			}			if(operationName.equals("handleTest{className}Response")){				{className}ResponseBean {classNamelow}ResponseBean = new {className}ResponseBean();				output = {className}DAO.selectAll();				{classNamelow}ResponseBean.setResponseHeader(responseHeader);				{classNamelow}ResponseBean.getPagingModel().setPageId(1);				{classNamelow}ResponseBean.getPagingModel().setPageSize(10);				{classNamelow}ResponseBean.getPagingModel().setTotalPages(1);{classNamelow}ResponseBean.getSortingModel().setSortBy("id");				{classNamelow}ResponseBean.getSortingModel().setSortBhv("asc");			if(output != null){					{classNamelow}ResponseBean.getPagingModel().setTotalSize(										output.size());				}else{					{classNamelow}ResponseBean.getPagingModel().setTotalSize(0);				}				{classNamelow}ResponseBean.set{className}s(output);				exchange.getIn().setBody({classNamelow}ResponseBean);			}


whereClauseByColumns_repeat_file=oracle/cxf/whereClauseByColumns.txt
checkclasswhereClauseByColumns_repeat_file=oracle/cxf/checkclasswhereClauseByColumns.txt
int_whereClauseByColumns_repeat_file=oracle/cxf/int_whereClauseByColumns.txt
Integer_whereClauseByColumns_repeat_file=oracle/cxf/int_whereClauseByColumns.txt
double_whereClauseByColumns_repeat_file=oracle/cxf/double_whereClauseByColumns.txt
Double_whereClauseByColumns_repeat_file=oracle/cxf/double_whereClauseByColumns.txt
Timestamp_whereClauseByColumns_repeat_file=oracle/cxf/timestamp_whereClauseByColumns.txt
boolean_whereClauseByColumns_repeat_file=oracle/cxf/boolean_whereClauseByColumns.txt
Boolean_whereClauseByColumns_repeat_file=oracle/cxf/boolean_whereClauseByColumns.txt


servletparams_repeat_file=oracle/servletparams/getparams.txt
checkclassParams_repeat_file=oracle/servletparams/checkclassParams.txt
int_servletparams_repeat_file=oracle/servletparams/int_getparams.txt
double_servletparams_repeat_file=oracle/servletparams/double_getparams.txt
Double_servletparams_repeat_file=oracle/servletparams/double_getparams.txt
Timestamp_servletparams_repeat_file=oracle/servletparams/timestamp_getparams.txt
boolean_servletparams_repeat_file=oracle/servletparams/boolean_getparams.txt
Integer_servletparams_repeat_file=oracle/servletparams/int_getparams.txt
Boolean_servletparams_repeat_file=oracle/servletparams/boolean_getparams.txt
encapsulateFields_repeat_file=oracle/enc.txt
fk_encapsulateFields_repeat_file=oracle/fk_enc.txt
String_encapsulateFields_repeat_file=oracle/string_enc.txt
copyfields_repeat=copyObj.set{propNameC}(this.{propName});\n
fk_copyfields_repeat=copyObj.set{propNameC}(this.{propName});\ncopyObj.set{propNameC}Obj(this.{propName}Obj);\n
class.java_repeat_file=oracle/mybatis/model.java
classDAOBase.java_repeat_file=oracle/mybatis/classDAOBase.java
classDAO.java_repeat_file=oracle/mybatis/classDAO.java
selectByProps_repeat_file=oracle/mybatis/selectByProps.txt
pk_selectByProps_repeat_file=oracle/mybatis/pkselectByProps.txt
deleteByProps_repeat_file=oracle/mybatis/deletebyprops.txt
deletebyflush_repeat=<flushOnExecute statement="{tblNamelow}_deleteBy{propName}"/>
displaytbl_repeat_file=oracle/displaytbl.txt
classTable_repeat_file=oracle/classTable.txt
tablebody_repeat_file=oracle/tablebody.txt
tableheader_repeat_file=oracle/tableheader.txt
jquerycolumns_repeat=null,
fk_displaytbl_repeat_file=oracle/fk_displaytbl.txt
fk_tablebody_repeat_file=oracle/fk_tablebody.txt
fk_tableheader_repeat_file=oracle/fk_tableheader.txt
edittbl_repeat_file=oracle/edittbl.txt
fk_edittbl_repeat_file=oracle/fk_edittbl.txt
boolean_edittbl_repeat_file=oracle/boolean_edittbl.txt
Timestamp_edittbl_repeat_file=oracle/timestamp_edittbl.txt
pk_edittbl_repeat_file=oracle/pkedittbl.txt
#searchcheck_tblrepeat=\t\nif (type.equals("{classNamelow}")) {\t\t\nurl = "/Pages/"+type+"/"+type+".jsp";\t\t\noutput = {className}DAO.get{className}LikeName("%" + name + "%");\t\n} 
servlethandle_repeat=\t\nString {propName} = request.getParameter("{propName}");\t\n{classNamelow}.set{propNameC}({propName});
#selectByFK_repeat={isFK}public List selectBy^fkTable$(Integer id) throws SQLException {  return DataAccessManager.queryForList("^tblNamelow$_selectBy^fkTable$ID",id); }{/isFK}
#deleteByFK_repeat={isFK}public int deleteBy^fkTable$(Integer id) throws SQLException {   int rows = 0; rows = DataAccessManager.getSqlMapper().delete("^tblNamelow$_deleteBy^fkTable$Id", id); return rows; }{/isFK}
DataAccessManager.java_file=oracle/mybatis/DataAccessManager.java
#displaytbl_repeat=\t\n<display:column title="{propNameC}" sortable="true" headerClass="sortable">\t\t\n<%\t\t\nrecord = ({className}) pageContext.getAttribute("row");\t\t\nout.print(record.get{propNameC}());%>\t\n</display:column>
#edittbl_repeat=\t\n<tr>\t\t\n<td >{propNameC}</td>\t\n</tr>\t\n<tr>\t\t\n<td>\t\t\t\n<input type="text" name="{propName}" value="<%if (edit{className} != null) {%><%=edit{className}.get{fstringpropNameC}()%><%}%>"  style="width:250px;height:24px;border:1px #C0C0C0 solid;font-family:Arial;font-size:13px;"/>\t\t\n</td>\t\n</tr>
searchcheck_tblrepeat=\t\nif (type.equals("{classNamelow}")) {\t\t\nurl = "/Pages/"+type+"/"+type+".jsp";\t\t\noutput = {className}DAO.search{className}( "{userName}.{tblName}.{fstringcolName} {equalorlike} {preString}" + name + "{afterString}");\t\n} 
#servlethandle_repeat=\t\nString {propName} = request.getParameter("{propName}");\t\n{classNamelow}.set{propNameC}({propName});
WorkFlowLoggingClass.java=package {logPackage}; import java.util.Calendar; import java.util.ResourceBundle; /** *  * @author mmetwally  */ public class WorkFlowLoggingClass {   public static void logInfo(String logStr) { try { ResourceBundle rcBundl = ResourceBundle.getBundle("WorkFlowDALLogging");            String dir = rcBundl.getString("infologPath");            if (dir.equals("")) {                return;            }            java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyyMMdd");            java.text.SimpleDateFormat writeDateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");            String writeFormat = writeDateFormat.format(Calendar.getInstance().getTime());            java.util.Date now = new java.util.Date();            java.io.File d = new java.io.File(dir);            java.io.File f = new java.io.File(dir + "CMS-" + dateFormat.format(now) + ".txt");            if (!d.exists()) {                d.mkdirs();            }            if (!f.exists()) {                f.createNewFile();            }            java.io.FileOutputStream out;    java.io.PrintStream p;      out = new java.io.FileOutputStream(f, true); p = new java.io.PrintStream(out); p.println("--" + writeFormat + "--" + logStr); p.close(); out.close();} catch (Exception e) {}  } public static void logInfo(String error,Exception ex) {                try {            ResourceBundle rcBundl = ResourceBundle.getBundle("WorkFlowDALLogging");            String dir = rcBundl.getString("errorLogPath");                       if (dir.equals("")) {                return;            }            java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyyMMdd");            java.text.SimpleDateFormat writeDateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");            String writeFormat = writeDateFormat.format(Calendar.getInstance().getTime());            java.util.Date now = new java.util.Date();            java.io.File d = new java.io.File(dir);            java.io.File f = new java.io.File(dir + "Error-CMS- "+dateFormat.format(now) + ".txt");            if (!d.exists()) {                d.mkdirs();            }            if (!f.exists()) {                f.createNewFile();            }            java.io.FileOutputStream out;            java.io.PrintStream p;            out = new java.io.FileOutputStream(f, true);            p = new java.io.PrintStream(out);            p.println("--" + writeFormat + "--" + error);            ex.printStackTrace(p);            p.close();            out.close();        } catch (Exception e) {        }  } }
SearchData.java_file=oracle\SearchData.java
web.xml_file=oracle\web-xml.txt
servletmap_tblrepeat=\n\t<servlet>\n\t\t<servlet-name>{className}Handler</servlet-name>\n\t\<servlet-class>com.{contextpath}.servlets.handlers.{className}Handler</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>{className}Handler</servlet-name>\n\t\t<url-pattern>/{className}Handler</url-pattern>\n\t</servlet-mapping>
classhandler.java_repeat_file=oracle\handler.java
class.jsp_repeat_file=oracle\class.jsp
class_Jquery.jsp_repeat_file=oracle\class_Jquery.jsp
classTable.jsp_repeat_file=oracle\classTable.jsp
logpath=c:/log
logfile=news
logPackage=com.{contextpath}.dal.logger.handler

userKeys={mapresource_tblrepeat},{typealiases_tblrepeat},{menulinks_tblrepeat},{classTable_repeat_file},{tablebody_repeat_file},{tableheader_repeat_file},{displaytbl_repeat_file},{edittbl_repeat_file},{searchcheck_tblrepeat},{servlethandle_repeat},{columnMap_repeat},{isNullProps_repeat},{isNullColmns_repeat},{isNullUpdate_repeat},{encapsulateFields_repeat_file},{deleteByProps_repeat_file},{selectByProps_repeat_file},{logfile},{logpath},{logPackage},{selectByALL_repeat},{deleteByALL_repeat},{copyfields_repeat},{fk_copyfields_repeat},{deletebyflush_repeat},{fk_edittbl_repeat_file},{Timestamp_edittbl_repeat_file},{fk_tablebody_repeat_file},{fk_tableheader_repeat_file},{jquerycolumns_repeat},{fk_displaytbl_repeat_file},{fk_encapsulateFields_repeat_file},{pk_selectByProps_repeat_file},{pk_edittbl_repeat_file},{pk_isNullProps_repeat},{pk_isNullColmns_repeat},{pk_isNullUpdate_repeat},{boolean_edittbl_repeat_file},{servletparams_repeat_file},{int_servletparams_repeat_file},{boolean_servletparams_repeat_file},{Integer_servletparams_repeat_file},{Boolean_servletparams_repeat_file},{servletmap_tblrepeat},{checkclassParams_repeat_file},{Double_servletparams_repeat_file},{double_servletparams_repeat_file},{Timestamp_servletparams_repeat_file},{String_encapsulateFields_repeat_file},{createProp_repeat_file},{fk_createProp_repeat_file},{Timestamp_createProp_repeat_file},{boolean_createProp_repeat_file},{Boolean_createProp_repeat_file},{pk_createProp_repeat_file},{addprop_repeat_file},{fk_addprop_repeat_file},{Timestamp_addprop_repeat_file},{boolean_addprop_repeat_file},{Boolean_addprop_repeat_file},{pk_addprop_repeat_file},{addpropvertical_repeat_file},{fk_addpropvertical_repeat_file},{Timestamp_addpropvertical_repeat_file},{boolean_addpropvertical_repeat_file},{Boolean_addpropvertical_repeat_file},{pk_addpropvertical_repeat_file},{emptyFields_repeat_file},{fk_emptyFields_repeat_file},{Timestamp_emptyFields_repeat_file},{boolean_emptyFields_repeat_file},{Boolean_emptyFields_repeat_file},{pk_emptyFields_repeat_file},{insertprop_repeat_file},{fk_insertprop_repeat_file},{Timestamp_insertprop_repeat_file},{Double_insertprop_repeat_file},{Integer_insertprop_repeat_file},{boolean_insertprop_repeat_file},{Boolean_insertprop_repeat_file},{pk_insertprop_repeat_file},{defineprop_repeat_file},{fk_defineprop_repeat_file},{Timestamp_defineprop_repeat_file},{boolean_defineprop_repeat_file},{Boolean_defineprop_repeat_file},{pk_defineprop_repeat_file},{propsetvalueTablemodel_repeat},{fk_propsetvalueTablemodel_repeat},{propgetvalueTablemodel_repeat},{pk_propgetvalueTablemodel_repeat},{fk_propgetvalueTablemodel_repeat},{Timestamp_propgetvalueTablemodel_repeat},{Double_propgetvalueTablemodel_repeat},{boolean_propgetvalueTablemodel_repeat},{Boolean_propgetvalueTablemodel_repeat},{Integer_propgetvalueTablemodel_repeat},{columnTitletable_repeat},{objectvaluetable_repeat},{cellEditor_repeat},{fk_cellEditor_repeat},{Timestamp_cellEditor_repeat},{propTag_repeat_file},{fk_propTag_repeat_file},{Timestamp_propTag_repeat_file},{boolean_propTag_repeat_file},{Boolean_propTag_repeat_file},{pk_propTag_repeat_file},{component_repeat_file},{fk_component_repeat_file},{Timestamp_component_repeat_file},{boolean_component_repeat_file},{Boolean_component_repeat_file},{pk_component_repeat_file},{propTagv_repeat_file},{fk_propTagv_repeat_file},{Timestamp_propTagv_repeat_file},{boolean_propTagv_repeat_file},{Boolean_propTagv_repeat_file},{pk_propTagv_repeat_file},{creatCustom_repeat_file},{fk_creatCustom_repeat_file},{classesProcessors_tblrepeat},{classesManagers_tblrepeat},{classesRoutes_tblrepeat},{whereClauseByColumns_repeat_file},{checkclasswhereClauseByColumns_repeat_file},{int_whereClauseByColumns_repeat_file},{Integer_whereClauseByColumns_repeat_file},{double_whereClauseByColumns_repeat_file},{Double_whereClauseByColumns_repeat_file},{Timestamp_whereClauseByColumns_repeat_file},{boolean_whereClauseByColumns_repeat_file},{Boolean_whereClauseByColumns_repeat_file},{testrequestresponsehandlers_tblrepeat},{testrequestresponseproces1_tblrepeat},{classestestRoutes_tblrepeat}